@inject Fluxor.IDispatcher Dispatcher
@using Store.Todo
@using Microsoft.AspNetCore.SignalR.Client
@using  System.Collections.Immutable 
@inject HubConnection HubConnection
@implements IDisposable

<Fluxor.Blazor.Web.StoreInitializer />
<Router AppAssembly="@typeof(Program).Assembly">
    <Found Context="routeData">
        <RouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)" />
    </Found>
    <NotFound>
        <LayoutView Layout="@typeof(MainLayout)">
            <p>Sorry, there's nothing at this address.</p>
        </LayoutView>
    </NotFound>
</Router>

@code {

    protected override async Task OnInitializedAsync()
    {
        Dispatcher.Dispatch(new LoadListsAction());

        await InitSignalR();

        await base.OnInitializedAsync();
    }


    private async Task InitSignalR()
    {
        HubConnection.On<Superpowers.Net5.Models.Todo.TodoListDto[]>("ListsChanged", (newLists) =>
        {
            Dispatcher.Dispatch(new LoadListsSuccessAction { TodoLists = newLists.ToImmutableList() });
        });

        await HubConnection.StartAsync();
    }


    public void Dispose()
    {
        _ = HubConnection.DisposeAsync();
    }

}
