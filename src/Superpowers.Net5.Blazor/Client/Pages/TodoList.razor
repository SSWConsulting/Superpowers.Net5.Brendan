@page "/todo"
@using Superpowers.Net5.Models.Todo
@inject HttpClient Http

<h1>Todo Lists</h1>


    <div class="row">
        <div class="col-4">
            <h4>Lists</h4>

            @if (todoLists != null)
            {
                <ul class="list-group mb-2">
                    @foreach (var todoList in todoLists)
                    {
                        <li class="list-group-item">@todoList.Title</li>
                    }
                </ul>
            }
            
            <div class="input-group mb-3">
                <input type="text" class="form-control" @bind="newListTitle" @bind:event="oninput" placeholder="Add New List">
                <div class="input-group-append">
                    <button class="btn btn-primary" type="button" disabled="@(string.IsNullOrWhiteSpace(newListTitle))">+ Add</button>
                </div>
            </div>

        </div>
        <div class="col-8">
            @if (selectedTodoList != null)
            {
                <h4>@selectedTodoList.Title</h4>
                <ul>
                    @foreach (var todoItem in selectedTodoList.Items)
                    {
                        <li class="">@todoItem.Title</li>
                    }
                </ul>

                <div class="input-group mb-3 col-8">
                    <input type="text" class="form-control" placeholder="Add List Item" @bind="newItemTitle" @bind:event="oninput">
                    <div class="input-group-append">
                        <button class="btn btn-primary" type="button" disabled="@(string.IsNullOrWhiteSpace(newItemTitle))">+ Add</button>
                    </div>
                </div>
            }
        </div>
    </div>


@code {
    private TodoListDto[] todoLists;
    private TodoListDto selectedTodoList;

    private string newListTitle;
    private string newItemTitle;


    protected override async Task OnInitializedAsync()
    {
        await LoadLists();
    }


    private async Task LoadLists()
    {
        todoLists = await Http.GetFromJsonAsync<TodoListDto[]>("/api/todolist");

        if (selectedTodoList == null || !todoLists.Select(t => t.Id).Contains(selectedTodoList.Id))
        {
            selectedTodoList = todoLists.FirstOrDefault();
        }

    }

}
